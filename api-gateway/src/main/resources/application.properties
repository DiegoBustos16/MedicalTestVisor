spring.application.name=api-gateway

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.loadbalancer.ribbon.enable=false

spring.cloud.gateway.routes[0].id=test-microservice
spring.cloud.gateway.routes[0].uri=lb://TEST-MICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/tests/**

spring.cloud.gateway.routes[1].id=doctor-microservice
spring.cloud.gateway.routes[1].uri=lb://DOCTOR-MICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/doctors/**

spring.cloud.gateway.routes[2].id=patient-microservice
spring.cloud.gateway.routes[2].uri=lb://PATIENT-MICROSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/patients/**

spring.cloud.gateway.routes[3].id=hospital-microservice
spring.cloud.gateway.routes[3].uri=lb://HOSPITAL-MICROSERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/hospitals/**

eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://host.docker.internal:8081/realms/medicaltestvisor-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=KGMUJuN6FzyyXtY7Yz88mVD3C9y65Rcr
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.scope=openid
spring.security.oauth2.client.provider.keycloak.user-name-attribute= preferred_username

spring.cloud.config.uri=http://host.docker.internal:8888
management.endpoints.web.exposure.include=refresh,bus-refresh
spring.kafka.bootstrap-servers=kafka:9092
spring.cloud.stream.bindings.output.destination=config-refresh-topic
spring.cloud.bus.enabled=true

spring.cloud.gateway.default-filters=TokenRelay

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.groups.enabled=true
springdoc.cache.disabled=true

springdoc.swagger-ui.url=/api/tests/v3/api-docs
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config

springdoc.swagger-ui.urls[0].name=Test Microservice
springdoc.swagger-ui.urls[0].url=/api/tests/v3/api-docs

springdoc.swagger-ui.urls[1].name=Doctor Microservice
springdoc.swagger-ui.urls[1].url=/api/doctors/v3/api-docs

springdoc.swagger-ui.urls[2].name=Patient Microservice
springdoc.swagger-ui.urls[2].url=/api/patients/v3/api-docs

springdoc.swagger-ui.urls[3].name=Hospital Microservice
springdoc.swagger-ui.urls[3].url=/api/hospitals/v3/api-docs

spring.web.cors.allowed-origins=http://localhost:8081
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type
spring.web.cors.allow-credentials=true